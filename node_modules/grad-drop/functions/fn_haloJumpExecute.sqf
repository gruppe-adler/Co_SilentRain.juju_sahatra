#include "..\component.hpp"

if (!isServer) exitWith {};


// grad_drop_debug = true;

// global var for drop state identification
missionNamespace setVariable ["grad_drop_dropState", 1, true];

private _planesPrepared = missionNameSpace getVariable ["GRAD_drop_planesPrepared", []];


// close ramp 
{
	_x params ["_planeInBase"];

	_planeInBase animate ["ramp_bottom", 0];
	_planeInBase animate ["ramp_top", 0];
	sleep 0.5;
} forEach _planesPrepared;

sleep 3;

missionNamespace setVariable ["grad_drop_dropState", 1, true];

// simulate start 
{
	_x params ["_planeInBase"];
	private _planeInSky = _planeInBase getVariable ["grad_drop_planeInSky", objNull];
	[_planeInBase, false] call grad_drop_fnc_simulateSound;
} forEach _planesPrepared;

sleep 3;

missionNamespace setVariable ["grad_drop_dropState", 2, true];

sleep 3;

missionNamespace setVariable ["grad_drop_dropState", 3, true];

{
	if (isPlayer _x && isNil "grad_drop_debug") then {
		[_x, 6, {}] call grad_drop_fnc_moveInPlaneCut;
	};
} forEach playableUnits + switchableUnits;


// move players inside sky plane
{
	_x params ["_planeInBase", "_marker", "_height", "_waitBeforeJump", "_giveParachute", "_onSceneCut", "_onLanding"];

	[_planeInBase, _waitBeforeJump, _onSceneCut, _onLanding, _giveParachute] call grad_drop_fnc_movePlayersInside;	
	[_planeInBase, _waitBeforeJump, _onLanding] spawn grad_drop_fnc_startProcedure;

} forEach _planesPrepared;

INFO("%1 planes executing HALO jump.", count _planesPrepared);



[{
	 setDate [1989, 7, 8, 1, 0];

	private _vector = [0,8];
	[_vector, markerDir "mrk_drop_1"] call BIS_fnc_rotateVector2D;
	_vector params ["_windX", "_windY"];
	setWind [_windX, _windY, true];

}, [], 6] call CBA_fnc_waitAndExecute;

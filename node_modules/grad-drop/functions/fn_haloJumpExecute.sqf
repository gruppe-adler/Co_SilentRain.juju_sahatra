#include "..\component.hpp"

private _delayToTeleport = 3;


if (!isServer) exitWith {};


{
	if (side _x == east) then {
    	_x disableAI "ALL";
	};
} forEach allUnits;


// grad_drop_debug = true;


private _planesPrepared = missionNameSpace getVariable ["GRAD_drop_planesPrepared", []];

// close ramp 
{
	_x params ["_planeInBase"];

	_planeInBase animate ["ramp_bottom", 0];
	_planeInBase animate ["ramp_top", 0];
	sleep 0.5;
} forEach _planesPrepared;

sleep 3;

// simulate start 
{
	_x params ["_planeInBase"];
	// turns on engines
	["grad_drop_soundChange", [_planeInBase, 1]] call CBA_fnc_serverEvent;
} forEach _planesPrepared;

sleep 3;


// turns engine to low speed
["grad_drop_soundChange", [_planeInBase, 2]] call CBA_fnc_serverEvent;

sleep 3;

// turns engine to high speed
{
	if (isPlayer _x && isNil "grad_drop_debug") then {
		[_x, _delayToTeleport] call grad_drop_fnc_moveInPlaneCut;
	};
} forEach playableUnits + switchableUnits;

["grad_drop_soundChange", [_planeInBase, 3]] call CBA_fnc_serverEvent;

sleep _delayToTeleport;


// move players inside sky plane
{
	_x params ["_planeInBase", "_marker", "_height", "_waitBeforeJump", "_giveParachute"];

	[_planeInBase, _waitBeforeJump, _giveParachute] call grad_drop_fnc_movePlayersInside;	
	[_planeInBase, _waitBeforeJump] spawn grad_drop_fnc_startProcedure;

} forEach _planesPrepared;

INFO("%1 planes executing HALO jump.", count _planesPrepared);

setDate [1992, 7, 8, 1, 0];

private _vector = [0,8];
[_vector, markerDir "mrk_drop_1"] call BIS_fnc_rotateVector2D;
_vector params ["_windX", "_windY"];
setWind [_windX, _windY, true];

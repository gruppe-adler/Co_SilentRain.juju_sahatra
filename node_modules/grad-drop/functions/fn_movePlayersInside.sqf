params ["_planeInBase", "_waitBeforeJump","_giveParachute"];

private _delay = 1;
private _attachHelper = _planeInBase getVariable ["grad_drop_attachHelper", objNull];
private _planeInSky = _planeInBase getVariable ["grad_drop_planeInSky", objNull];
private _triggerPlane = _planeInBase getVariable ["grad_drop_cargoTrigger", objNull];

_planeInSky hideObject false; // for testing purposes singleplayer, jumpmaster falls through without

// iterate players and move everyone into the corresponding plane in the sky
{
    private _unit = _x;
    private _isInPlane = _unit inArea _triggerPlane; // call grad_drop_fnc_getPositionInsidePlane; // [0.99707,-2.46436,-4.52348]

    if (_isInPlane) then {
            private _relDir = _unit getRelDir _attachHelper;
            // private _positionInPlane = _unit worldToModel ASLToAGL getPosASL _triggerPlane;
            [_unit, _attachHelper] call BIS_fnc_attachToRelative;; // prevents movement and prepares for transfer
            _unit setVariable ["grad_drop_relDir", _relDir, true];

            if (!isNil "grad_drop_debug") then {
                private _debugMarker = "VR_3DSelector_01_default_F" createVehicleLocal [0,0,0];
                _debugMarker setPos getPos _unit;
            };

            // move in players client side fx
            [{
                params ["_triggerPlane", "_planeInSky", "_unit", "_giveParachute"];

                // for debug purposes
                if (_unit isKindOf "Man") then {
                    [_unit, _planeInSky, _giveParachute] remoteExec ["grad_drop_fnc_moveInRemote", _unit];
                };

            }, [_triggerPlane, _planeInSky, _unit, _giveParachute], _delay] call CBA_fnc_waitAndExecute;
        };

} forEach (playableUnits + switchableUnits + (allMissionObjects "Sign_sphere25cm_EP1") + (allMissionObjects "Sign_Sphere10cm_Geometry_F")); // support for editor + AI tests


// _triggerPlane attachTo [_planeInSky, [0,0,-.3]];

// race condition: wait till players are safely attached
[{
    params ["_attachHelper", "_planeInSky", "_planeInBase"];
    count (attachedObjects _attachHelper) > 0
},{
    params ["_attachHelper", "_planeInSky", "_planeInBase"];

    diag_log format ["moveplayersinside: attachedObjects in skyplane: %1", count attachedObjects _attachHelper];
        [{
            params ["_attachHelper", "_planeInSky", "_planeInBase"];
            private _y = getDir _planeInBase + 180; private _p = 0; private _r = 0; 
            _attachHelper setVectorDirAndUp [ 
                [sin _y * cos _p, cos _y * cos _p, sin _p], 
                ([[sin _r, -sin _p, cos _r * cos _p], -_y] call BIS_fnc_rotateVector2D)
            ];

            // move attachhelper after players are attached
            _attachHelper setPos (_planeInSky modelToWorld [0,0,0]);// [-0.0581055,0.08965,-3.75892]];               
            diag_log format ["moveplayersinside: attachhelper setpossed in skyplane: %1", getpos _attachHelper];

            private _jm = _planeInSky getVariable ["grad_drop_jumpmaster", objNull];
            detach _jm;
            _jm setFormDir (getDir _planeInSky) + 60;
            _jm setDir (getDir _planeInSky) + 60;
            _jm setAnimSpeedCoef 0.8;
            
            [_jm,"InBaseMoves_HandsBehindBack1"] call grad_drop_fnc_switchMove;
        }, [_attachHelper, _planeInSky, _planeInBase], 2] call CBA_fnc_waitAndExecute;

}, [_attachHelper, _planeInSky, _planeInBase], _delay+5] call CBA_fnc_waitUntilAndExecute;

/*
[["RHS_C130J",[["EmptyDetectorArea10x10",[0.0910645,2.46191,-3.62839],[[-0.952978,0.302979,0.00606005],[0,-0.0199975,0.9998]]]]]]
*/
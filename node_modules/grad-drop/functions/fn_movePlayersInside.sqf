params ["_planeInBase", "_waitBeforeJump", "_onSceneCut", "_onLanding", "_giveParachute"];

// iterate players and move everyone into the corresponding plane in the sky
{
    private _unit = _x;
    private _triggerPlane = _planeInBase getVariable ["grad_drop_cargoTrigger", objNull];
    private _isInPlane = _unit inArea _triggerPlane; // call grad_drop_fnc_getPositionInsidePlane; // [0.99707,-2.46436,-4.52348]
    private _planeInSky = _planeInBase getVariable ["grad_drop_planeInSky", objNull];

    if (_isInPlane) then {

        private _relDir = _unit getRelDir _triggerPlane;
        private _positionInPlane = _unit worldToModel (position _triggerPlane);
        _unit setVariable ["grad_drop_relDir", _relDir, true];
        // _unit attachTo [_planeInBase]; // prevent unit from moving

        if (!isNil "grad_drop_debug") then {
            private _debugMarker = "VR_3DSelector_01_default_F" createVehicleLocal [0,0,0];
            _debugMarker setPos getPos _unit;
        };
        // cut sequence players locally
        private _delay = 1;
        [_unit, _delay, _onSceneCut] remoteExec ["grad_drop_fnc_moveInPlaneCut",0,false];

        // move in players server side
        [{
            params ["_planeInSky", "_positionInPlane", "_unit", "_giveParachute"];
            [_unit, _planeInSky, _positionInPlane, _giveParachute] remoteExec ["grad_drop_fnc_moveInRemote", _unit];
         }, [_planeInSky, _positionInPlane, _unit, _giveParachute], _delay] call CBA_fnc_waitAndExecute;
    };

} forEach (playableUnits + switchableUnits); // support for editor + AI tests

/*
[["RHS_C130J",[["EmptyDetectorArea10x10",[0.0910645,2.46191,-3.62839],[[-0.952978,0.302979,0.00606005],[0,-0.0199975,0.9998]]]]]]
*/
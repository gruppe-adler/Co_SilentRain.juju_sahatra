#include "..\component.hpp"

if (!isServer) exitWith {_this remoteExec ["grad_drop_fnc_initHalojump",2,false]};

private _planesPrepared = missionNameSpace getVariable ["GRAD_drop_planesPrepared", []];

// spawn static planes to prepare them in position
{
	_x params ["_planeInBase", "_marker", "_height", "_waitBeforeJump", "_giveParachute", "_onSceneCut", "_onLanding"];

	private _triggerPlaneBase = "EmptyDetectorArea10x10" createVehicle [0,0,0];
	_triggerPlaneBase attachTo [_planeInBase, [0.0910645,2.46191,-3.62839]]; // manually reverse engineered offset
	_triggerPlaneBase setVectorDirAndUp [[-0.952978,0.302979,0.00606005],[0,-0.0199975,0.9998]];
	_planeInBase setVariable ["grad_drop_cargoTrigger", _triggerPlaneBase, true];

	if (!isNil "grad_drop_debug") then {
            private _debugMarker = "VR_3DSelector_01_default_F" createVehicleLocal [0,0,0];
            _debugMarker setPos getPos _triggerPlaneBase;
    };

	private _dir = markerDir _marker;
	private _position = getMarkerPos _marker;
	private _planeInSky = [_position, _dir, _height] call grad_drop_fnc_spawnPlane;

	private _triggerPlaneSky = "EmptyDetectorArea10x10" createVehicle [0,0,0];
	_triggerPlaneSky attachTo [_planeInSky, [-0.0865479,-2.31348,-3.67148]]; // manually reverse engineered offset
	_triggerPlaneSky setVectorDirAndUp [[0.95272,-0.30379,-0.00607631],[0,-0.0199977,0.9998]];
	_planeInSky setVariable ["grad_drop_cargoTrigger", _triggerPlaneSky, true];

	if (!isNil "grad_drop_debug") then {
            private _debugMarker = "VR_3DSelector_01_default_F" createVehicleLocal [0,0,0];
            _debugMarker setPos getPos _triggerPlaneSky;
    };

	// store mirror object
	_planeInBase setVariable ["grad_drop_planeInSky", _planeInSky, true];

} forEach _planesPrepared;

INFO_2("%1 planes created for HALO jump.", count _planesPrepared);

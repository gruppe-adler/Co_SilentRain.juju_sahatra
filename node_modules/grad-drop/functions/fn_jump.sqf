#include "..\component.hpp"

if (!hasInterface) exitWith {};

params ["_plane"];

player allowdamage false;

// wait until fall animation (indicates player jumped)
waitUntil {
    (toLower animationState player) in ["halofreefall_non","halofreefall_f","halofreefall_b"]
}; 
       
        
// mark jump start in var
player setVariable ["GRAD_drop_dropstart", true];
resetCamShake;

// throw player out in angle and give speed
private _angleToJump = (getDir _plane) + (round (random 20) - 10);
player setVelocity [_angleToJump * (sin _angleToJump), _angleToJump * (cos _angleToJump), -15 ];

// disable plane sounds locally
if (!isNull _plane) then {
    private _soundSources = _plane getVariable ["grad_drop_soundSources", []];
    { _x enableSimulation false; } forEach _soundSources;
};

// todo create replacement sounds that move away/fadeout


// fx
addCamShake [50, 25, 10];
playSound "grad_drop_wind1";
addCamShake [20, 10, 10];
addCamShake [10, 20,  5];

sleep 2;

// open chute
private _chute = createVehicle ['rhs_d6_Parachute', position Player,[],0,'Fly'];
_chute setPos position player;
player moveIndriver _chute; 
_chute allowDamage false;

// hide objects related to plane locally
if (!isNull _plane) then {
    hideObject _plane;  
    private _planeLights = _plane getVariable ["grad_drop_lights", []];
    { _x hideObject true; } forEach _planeLights;
    
    private _jumpmaster = _plane getVariable ["grad_drop_jumpmaster", objNull];
    hideObject _jumpmaster;
};

// open chute
player setVariable ["GRAD_drop_dropped", true];
resetCamShake;
playSound "grad_drop_openChute1";
34 cutText ["", "BLACK IN", 2];
addCamShake [75, 5, 5];

playSound "grad_drop_grunt";
playSound "grad_drop_openChute2";

addCamShake [5,  5,  2];

setAperture 0.05;
setAperture -1;
"DynamicBlur" ppEffectEnable true;
"DynamicBlur" ppEffectAdjust [8.0];
"DynamicBlur" ppEffectCommit 0.01;

sleep 1;

"DynamicBlur" ppEffectAdjust [0.0];
"DynamicBlur" ppEffectCommit 3;

sleep 3;

"DynamicBlur" ppEffectEnable false;
"RadialBlur" ppEffectAdjust [0.0, 0.0, 0.0, 0.0];
"RadialBlur" ppEffectCommit 1.0;
"RadialBlur" ppEffectEnable false;

playSound "grad_drop_heartbeat";


playSound "grad_drop_paraPilot";
addCamShake [2, 3.5, 1];

waitUntil {(getPos player select 2) < 8};

playSound "grad_drop_openChute1";
resetCamShake;
enableCamShake false;

[{
    player allowdamage true;
}, [], 15] call CBA_fnc_waitAndExecute;

params ["_plane", ["_fadeOut", false]];

private _soundDummyLeftPos = [-5,1.6,-1.2];
private _soundDummyRightPos = [5,1.6,-1.2];

private _isInPlane = !(player getVariable ["GRAD_drop_dropstart", false]);

// fade in sound by descending from heaven

private _soundDummyLeft = createSimpleObject ["Sign_Sphere10cm_F", [0,0,0], true];
private _soundDummyRight = createSimpleObject ["Sign_Sphere10cm_F", [0,0,0], true];
_soundDummyLeft setObjectTexture [0, "#(rgb,8,8,3)color(0,0,0,0)"];
_soundDummyRight setObjectTexture [0, "#(rgb,8,8,3)color(0,0,0,0)"];
_plane setVariable ["grad_drop_soundDummyLeft", _soundDummyLeft];
_plane setVariable ["grad_drop_soundDummyRight", _soundDummyRight];

systemchat "bla";

private _soundSourceLeft = createSoundSource ["c130_sound_int_forsage_sfx", (_plane modelToWorld _soundDummyLeftPos), [], 0];
private _soundSourceRight = createSoundSource ["c130_sound_int_forsage_sfx",  (_plane modelToWorld _soundDummyRightPos), [], 0];




// defines situation drop is in (set by server)
private _dropState = missionNamespace getVariable ["grad_drop_dropState", -1];
if (_dropState > 4) exitWith {};

private _sound = "c130_sound_int_forsage";

if (_isInPlane) then {
	switch (_dropState) do {
		case 1: { _sound = "c130_sound_int_forsage"; };
		case 2: { _sound = "c130_sound_int_low"; };
		case 3: { _sound = "c130_sound_int_hi"; };
		case 4: { _sound = "c130_sound_ext_hi"; };
		default { _sound = "c130_sound_int_forsage"; };
	};
} else {
	switch (_dropState) do {
		case 1: { _sound = "c130_sound_ext_forsage"; };
		case 2: { _sound = "c130_sound_ext_low"; };
		case 3: { _sound = "c130_sound_ext_hi"; };
		case 4: { _sound = "c130_sound_ext_hi"; };
		default { _sound = "c130_sound_int_forsage"; };
	};
};

